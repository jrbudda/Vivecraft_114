--- a/net/minecraft/client/renderer/entity/layers/HeldItemLayer.java
+++ b/net/minecraft/client/renderer/entity/layers/HeldItemLayer.java
@@ -1,14 +1,22 @@
 package net.minecraft.client.renderer.entity.layers;
 
+import org.vivecraft.render.PlayerModelController;
+import org.vivecraft.render.PlayerModelController.RotInfo;
+
 import com.mojang.blaze3d.platform.GlStateManager;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.entity.IEntityRenderer;
 import net.minecraft.client.renderer.entity.model.EntityModel;
 import net.minecraft.client.renderer.entity.model.IHasArm;
+import net.minecraft.client.renderer.entity.model.VRPlayerModel;
 import net.minecraft.client.renderer.model.ItemCameraTransforms;
 import net.minecraft.entity.LivingEntity;
+import net.minecraft.entity.player.PlayerEntity;
 import net.minecraft.item.ItemStack;
+import net.minecraft.item.UseAction;
+import net.minecraft.util.Hand;
 import net.minecraft.util.HandSide;
+import net.minecraft.util.math.Vec3d;
 
 public class HeldItemLayer<T extends LivingEntity, M extends EntityModel<T> & IHasArm> extends LayerRenderer<T, M>
 {
@@ -26,6 +34,10 @@
         if (!itemstack.isEmpty() || !itemstack1.isEmpty())
         {
             GlStateManager.pushMatrix();
+            
+    		RotInfo rotinfo = null;
+    		if(entityIn instanceof PlayerEntity)
+    				rotinfo = PlayerModelController.getInstance().getRotationsForPlayer(entityIn.getUniqueID());
 
             if (this.getEntityModel().isChild)
             {
@@ -34,6 +46,10 @@
                 GlStateManager.scalef(0.5F, 0.5F, 0.5F);
             }
 
+            if(rotinfo!=null) {
+                GlStateManager.scalef(rotinfo.heightScale, rotinfo.heightScale, rotinfo.heightScale);
+            }
+            
             this.renderHeldItem(entityIn, itemstack1, ItemCameraTransforms.TransformType.THIRD_PERSON_RIGHT_HAND, HandSide.RIGHT);
             this.renderHeldItem(entityIn, itemstack, ItemCameraTransforms.TransformType.THIRD_PERSON_LEFT_HAND, HandSide.LEFT);
             GlStateManager.popMatrix();
@@ -44,6 +60,18 @@
     {
         if (!p_188358_2_.isEmpty())
         {
+        	
+    		RotInfo rotinfo = null;
+    		if(p_188358_1_ instanceof PlayerEntity)
+    				rotinfo = PlayerModelController.getInstance().getRotationsForPlayer(p_188358_1_.getUniqueID());
+
+    		if(handSide == HandSide.LEFT && 
+    				rotinfo !=null && 
+    				rotinfo.seated == false && 
+    				(p_188358_2_.getUseAction() == UseAction.BOW ||
+    				p_188358_1_.getHeldItemMainhand().getUseAction() == UseAction.BOW))
+    			return;
+    		
             GlStateManager.pushMatrix();
             this.translateToHand(handSide);
 
@@ -55,7 +83,55 @@
             GlStateManager.rotatef(-90.0F, 1.0F, 0.0F, 0.0F);
             GlStateManager.rotatef(180.0F, 0.0F, 1.0F, 0.0F);
             boolean flag = handSide == HandSide.LEFT;
+			//VIVECRAFT
+    		if(rotinfo == null || rotinfo.seated) {
             GlStateManager.translatef((float)(flag ? -1 : 1) / 16.0F, 0.125F, -0.625F);
+    		}
+    		else{
+
+    			GlStateManager.translatef((float)(flag ? -1 : 1) / 16.0F, 0.125F,  -.2125f);
+
+    			if(p_188358_2_.getUseAction() == UseAction.BOW && !rotinfo.seated){
+
+    				VRPlayerModel m = (VRPlayerModel) this.getEntityModel();
+
+    				float scale = (float) 0.0625 * rotinfo.heightScale;
+
+    				GlStateManager.popMatrix();
+    				GlStateManager.pushMatrix();
+
+    				GlStateManager.translatef(m.bipedLeftArm.rotationPointX*scale,m.bipedLeftArm.rotationPointY*scale,m.bipedLeftArm.rotationPointZ*scale);
+
+    				if(p_188358_1_.isHandActive()){
+    					//yaw is handled by the body
+    					float pitch1 = p_188358_1_.rotationPitch;
+
+    					GlStateManager.rotatef((float) (-90), 0,1,0);
+    					GlStateManager.rotatef((float) pitch1, 1,0,0);
+    					GlStateManager.translatef(0, -0.155F, 0);
+
+    				} else{
+    					GlStateManager.rotatef((float) Math.toDegrees(m.bipedLeftArm.rotateAngleY), 0,1,0);
+    					GlStateManager.rotatef( 90 + (float) Math.toDegrees(m.bipedLeftArm.rotateAngleX), 1,0,0);
+    				}
+
+    				GlStateManager.translatef(0, 0.155F, -0.215F);
+    				Minecraft.getInstance().getFirstPersonRenderer().renderItemSide(p_188358_1_, p_188358_2_, p_188358_3_, flag);
+    				GlStateManager.popMatrix();
+
+    				GlStateManager.pushMatrix();
+    				this.translateToHand(handSide);
+    				GlStateManager.popMatrix();
+    				return;
+    			} else {
+    				GlStateManager.rotatef(-80.0F, 1.0F, 0.0F, 0.0F);        		
+    			}
+
+    			GlStateManager.translatef(0, 0.155F, -0.215F);
+
+    		}
+
+    		//
             Minecraft.getInstance().getFirstPersonRenderer().renderItemSide(p_188358_1_, p_188358_2_, p_188358_3_, flag);
             GlStateManager.popMatrix();
         }
