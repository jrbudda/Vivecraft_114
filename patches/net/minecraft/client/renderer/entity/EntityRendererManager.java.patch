--- a/net/minecraft/client/renderer/entity/EntityRendererManager.java
+++ b/net/minecraft/client/renderer/entity/EntityRendererManager.java
@@ -6,6 +6,9 @@
 import java.util.Collections;
 import java.util.Map;
 import javax.annotation.Nullable;
+
+import org.vivecraft.render.PlayerModelController;
+
 import net.minecraft.client.GameSettings;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.player.AbstractClientPlayerEntity;
@@ -134,6 +137,10 @@
     private final Map<Class, EntityRenderer> renderers = Maps.newHashMap();
     private final Map<String, PlayerRenderer> skinMap = Maps.newHashMap();
     private final PlayerRenderer playerRenderer;
+	//VIVECRAFT
+	private final Map<String, VRPlayerRenderer> skinMapVR = Maps.<String, VRPlayerRenderer>newHashMap();
+	private VRPlayerRenderer playerRendererVR;
+	//
     private FontRenderer textRenderer;
     private double renderPosX;
     private double renderPosY;
@@ -292,7 +299,20 @@
         {
             String s = ((AbstractClientPlayerEntity)entityIn).getSkinType();
             PlayerRenderer playerrenderer = this.skinMap.get(s);
-            return (U)(playerrenderer != null ? playerrenderer : this.playerRenderer);
+			//VIVECRAFT
+			if(PlayerModelController.getInstance().isTracked(entityIn.getUniqueID()))
+			{
+				if (this.playerRendererVR == null) { // Needs to lazy load cause RenderGlobal
+					this.playerRendererVR = new VRPlayerRenderer(this);
+					this.skinMapVR.put("default", this.playerRendererVR);
+					this.skinMapVR.put("slim", new VRPlayerRenderer(this, true));
+				}
+				VRPlayerRenderer renderplayervr = this.skinMapVR.get(s);
+				
+				return (U) (renderplayervr != null ? renderplayervr : this.playerRendererVR);            	
+			}  else 
+				return (U) (playerrenderer != null ? playerrenderer : this.playerRenderer);
+			//
         }
         else
         {
