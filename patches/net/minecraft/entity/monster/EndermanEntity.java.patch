--- a/net/minecraft/entity/monster/EndermanEntity.java
+++ b/net/minecraft/entity/monster/EndermanEntity.java
@@ -6,6 +6,10 @@
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.ServerVivePlayer;
+
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockState;
 import net.minecraft.block.Blocks;
@@ -197,15 +201,33 @@
         }
         else
         {
-            Vec3d vec3d = player.getLook(1.0F).normalize();
+        	//VIVE FIX
+            Vec3d vec3d;
+            ServerVivePlayer vp = NetworkHelper.vivePlayers.get(player.getUniqueID());
+        	vec3d = player.getLook(1);
             Vec3d vec3d1 = new Vec3d(this.posX - player.posX, this.getBoundingBox().minY + (double)this.getEyeHeight() - (player.posY + (double)player.getEyeHeight()), this.posZ - player.posZ);
+            boolean vr = vp !=null && vp.isVR();
+            if (vr)
+            {
+            	vec3d = vp.getHMDDir();
+            	Vec3d hmdpos = vp.getHMDPos();
+                vec3d1 = new Vec3d(this.posX - hmdpos.x, this.getBoundingBox().minY + (double)this.getEyeHeight() - hmdpos.y, this.posZ - hmdpos.z);
+            }
+        	//          
             double d0 = vec3d1.length();
             vec3d1 = vec3d1.normalize();
             double d1 = vec3d.dotProduct(vec3d1);
-            return d1 > 1.0D - 0.025D / d0 ? player.canEntityBeSeen(this) : false;
+            //Vivecraft
+            return d1 > 1.0D - 0.025D / d0 ? (vr ? canSee(vp.getHMDPos(), new Vec3d(posX, posY + getEyeHeight(), posZ)) : player.canEntityBeSeen(this)) : false;
+            //
         }
     }
-
+    
+    private boolean canSee(Vec3d source, Vec3d Target)
+    {
+        return this.world.rayTraceBlocks(new RayTraceContext(source, Target, RayTraceContext.BlockMode.COLLIDER, RayTraceContext.FluidMode.NONE, this)).getType() == RayTraceResult.Type.MISS;
+    }
+    
     protected float getStandingEyeHeight(Pose poseIn, EntitySize sizeIn)
     {
         return 2.55F;
